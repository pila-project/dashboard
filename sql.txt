WITH tc AS (
--THIS TABLE HAS ONE ROW PER TEST CASE. I AGGREGATE BY GROUP NAME
--AND COUNT ALL OCCURENCIES (all_test_cases) AND THEN COUNT OCCURENCIES
--THAT HAVE STATUS = "OK" ( passed_test_cases)
    SELECT tc.group_name AS name,
           COUNT(*) AS all_test_cases,
           SUM(CASE WHEN tc.status = 'OK' THEN 1 ELSE 0 END) AS passed_test_cases
      FROM test_cases AS tc

  GROUP BY 1

  )


SELECT tg.name,
       COALESCE(tc.all_test_cases, 0) AS all_test_cases,
       COALESCE(tc.passed_test_cases, 0) AS passed_test_cases,
       --TO GET TOTAL_VALUE WE MULTIPLY THE VALUE OF ONE TEST BY
       --THE NUMBER OF PASSED TESTS FOR THE GROUP NAME
       COALESCE(tc.passed_test_cases * tg.test_value, 0) AS total_value
--JOIN HAS TO HAPPEN FROM TEST_GROUPS TABLE SINCE IT CONTAINS ALL TEST NAMES
  FROM test_groups AS tg
LEFT JOIN tc
    ON tc.name = tg.name
ORDER BY COALESCE(tc.passed_test_cases * tg.test_value, 0) DESC,
         tg.name ASC


create table test_groups (
	name varchar(40) not null,
    test_value integer not null,
    unique(name)
);

create table test_cases(
	id integer not null,
    group_name varchar(40) not null,
    status varchar(5) not null,
    unique(id)
);


insert into test_groups values ('performance', 15);
insert into test_groups values ('corner cases', 10);
insert into test_groups values ('numerical stability', 20);
insert into test_groups values ('memory usage', 10);
insert into test_cases values (13, 'memory usage', 'OK');
insert into test_cases values (14, 'numerical stability', 'OK');
insert into test_cases values (15, 'memory usage', 'ERROR');
insert into test_cases values (16, 'numerical stability', 'OK');
insert into test_cases values (17, 'numerical stability', 'OK');
insert into test_cases values (18, 'performance', 'ERROR');
insert into test_cases values (19, 'performance', 'ERROR');
insert into test_cases values (20, 'memory usage', 'OK');
insert into test_cases values (21, 'numerical stability', 'OK');

WITH tc AS (
    SELECT tc.group_name AS name,
           COUNT(*) AS all_test_cases,
           SUM(CASE WHEN tc.status = 'OK' THEN 1 ELSE 0 END) AS passed_test_cases
      FROM test_cases AS tc

  GROUP BY 1)


SELECT tg.name,
       COALESCE(tc.all_test_cases, 0) AS all_test_cases,
       COALESCE(tc.passed_test_cases, 0) AS passed_test_cases,

       COALESCE(tc.passed_test_cases * tg.test_value, 0) AS total_value
  FROM test_groups AS tg
LEFT JOIN tc
    ON tc.name = tg.name
ORDER BY COALESCE(tc.passed_test_cases * tg.test_value, 0) DESC,
         tg.name ASC;
